그럼 특정 사황에서 dashboard를 가고 싶지 않을 때는  successForwardUrl를 사용하는 건가? defaultSuccessUrl의 예외 같은 느낌이야?

ChatGPT
네, 맞습니다. .successForwardUrl()를 사용하면 로그인 성공 후에 특정 상황에서만 특정 경로로 포워딩하도록 설정할 수 있습니다. 이는 .defaultSuccessUrl()의 예외처럼 동작할 수 있습니다.

예를 들어, 특정 조건이 충족되었을 때만 특정 페이지로 이동하고, 그 외에는 기본 이동 경로를 사용하고 싶을 때 .successForwardUrl()를 사용할 수 있습니다.

java
Copy code
http
    .formLogin(login -> login
        .loginPage("/login")
        .loginProcessingUrl("/login-process")
        .successForwardUrl("/dashboard") // 기본적으로는 /dashboard로 포워딩
    )
    .authorizeRequests()
        .antMatchers("/admin/**").hasRole("ADMIN") // ADMIN 권한이 있는 경우
        .antMatchers("/user/**").hasRole("USER")   // USER 권한이 있는 경우
    .and()
    .exceptionHandling()
        .accessDeniedPage("/access-denied"); // 권한이 없는 경우 /access-denied로 이동
위의 예제에서는 .successForwardUrl("/dashboard")로 설정되어 있어서 기본적으로는 로그인 성공 시에는 /dashboard로 포워딩됩니다. 그러나 특정 조건이 충족되면 해당 경로로 포워딩하고, 권한이 없는 경우에는 /access-denied로 이동하도록 설정되어 있습니다.

이렇게 특정 상황에서 예외적인 포워딩이 필요한 경우에 .successForwardUrl()을 사용할 수 있습니다.


-----------------------------------------!!!

**csrf().diable()**
: 악의적 조작 요청 수락x (이건 사용)

**cors().disable()**
: 사용xx
: 소셜 로그인이 안 됨
: 특정 경로에 대한 cors 설정을 세밀하게 하기를 권장

**dispatcherTYPE Matchers **
: 어떤 종류의 요청에 적용할지 열거형으로 표현

**@AuthenticationPrincipal**
: 유저 정보 백엔드에서 획득
: 프론트에서 더 이상 유저 정보 들고 다닐 필요 없음
: 더 알고 싶으면 (세션, 쿠키)

**@Value(~)**
: ~의 경로에 해당하는 값을 주입
: 외부의 값을 끌고 올 때 사용

** @PostConstruct **
: 빈이 생성된 후에 초기화 메서드를 실행하도록 지정
: 빈의 초기화 코드를 명시적으로 정의할 수 있음
: @PostConstruct이 붙은 메서드는 반드시 하나만 있어야
: 반환 타입이 void이어야 하며, 매개변수를 가질 수도

**.antMatchers("/login/google").anonymous()**
: URL 패턴에 대한 권한을 설정하기 위해 사용되는 메서드
: 구글 로그인 경로에 익명 사용자(로그인 하지 않은) 접근 허가
: 로그인을 했다면 해당 페이지는 접근 불가

-----
public String getUserPk(String token) {
        return Jwts.parser().setSigningKey(secretKey)
                .parseClaimsJws(token).getBody().getSubject(); //클레임(claims)이라는 정보를 포함하고 있으며, 클레임 중에는 토큰의 주체(Subject)를 나타내는 부분이 있
        //setSigningKey(secretKey):
        // 주어진 비밀 키(secretKey)를 사용하여 토큰의 서명을 확인하기 위한 키를 설정합니다.
        // 토큰(봉인된 편지)의 내용(클레임) 자체를 확인하는 게 아니라, 그 봉인 자체가 유효한지를 확인하는 과정 -> 봉인이 유효하다면 안전하구나! 판단

-------
