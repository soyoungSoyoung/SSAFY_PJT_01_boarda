컴포넌트분리
버튼만들기
props + 함수넘기기
useState
조건부 동적 렌더링
조건부 동적 스타일링
리스트 데이터 동적 출력 (v-for처럼)
-컴포넌트 태그 속성에 {}객체를 주면??
리액트 HOC
children 외에 추가 slot 넣기 - jsx블록을 prop으로
wrapper component에게 어떤 tag를 생성하게 할지 동적으로 내려주기
디폴트 prop 값 설정 (js 기본)


JSX없이 작성하기 - React.createElement(App)
프래그먼트



* vite에서 환경변수 사용법
디렉토리에 .env파일 생성
변수명 VITE_로 시작하는 변수생성
따옴표를 감싸도 괜찮음
VITE_TEST_DATA = "abcd"
사용시 import.meta.env.변수명으로 호출

* vite 절대경로 설정 방법
vite.config.js 직접 수정
defineConfig안에 resolve : 추가
find에는 별칭을, replacement에는 절대 경로를 주입한다. 별칭이 있는 경로의 수만큼 alias 배열에 추가한다. 별칭은 tsconfig.json의 paths와 일치시킨다.
예)

import { defineConfig } from "vite";
import react from "@vitejs/plugin-react";

// https://vitejs.dev/config/
export default defineConfig({
  plugins: [react()],
  resolve: {
    alias: [
      {
        find: "@",
        replacement: "/src",
      },
    ],
  },
});

find가 별칭이고replacement가 실제 경로

**기본**
/만 사용되면 root, 즉 가장 토대가 되는 경로가 선택됩니다.
./는 현재 위치를 나타냅니다. 현재 위치 ./는 보통 생략합니다.
../는 상위 경로를 나타냅니다. 상위 경로는 현재 폴더가 속한 폴더를 가리킵니다.

**vite**
- public 폴더는 자동으로 root로 잡힘
- public 아래에 또 폴더가 있으면 root에서 바로 접근 가능함



*CORS vs SOP
-CSRF XSS
origin? https://google.com:443
-> 프로토콜(scheme) + 호스트 + 포트번호

Preflight Request?

http 헤더에
origin : ....
Access-Control-Allow-Origin : ...

클라이언트 프론트 백

클라 -> 프론트
프론트에 있는 버튼 클릭 (fetch 이벤트리스너 걸려있다.)
버튼 클릭하면 클라 -> 백 (origin 표시 , preflight)..
CORS위반? 판단




